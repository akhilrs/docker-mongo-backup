ARG BASETAG=latest
FROM alpine:$BASETAG

LABEL maintainer="akhilrs <https://akhil.rs>"

ARG GOCRONVER=v0.0.9
ARG TARGETOS
ARG TARGETARCH
RUN apk add --no-cache \
    coreutils \
    bash \
    tzdata \
    py2-pip \
    mongodb-tools \
    curl

RUN set -x \
	&& apk update && apk add ca-certificates \
	&& curl -L https://github.com/prodrigestivill/go-cron/releases/download/$GOCRONVER/go-cron-$TARGETOS-$TARGETARCH-static.gz | zcat > /usr/local/bin/go-cron \
	&& chmod a+x /usr/local/bin/go-cron \
	&& apk del ca-certificates

ENV MONGO_DATABASE="**None**" \
    MONGO_HOST="**None**" \
    MONGO_PORT=5432 \
    MONGO_USERNAME="**None**" \
    MONGO_PASSWORD="**None**" \
    MONGO_AUTH_DB="**None**" \
    MONGO_COLLETION="**None**" \
    CLOUD_BACKUP=False \
    CLOUD_PROVIDER="**None**" \
    SCHEDULE="@daily" \
    BACKUP_DIR="/backups" \
    BACKUP_KEEP_DAYS=7 \
    BACKUP_KEEP_WEEKS=2 \
    BACKUP_KEEP_MONTHS=1 \
    HEALTHCHECK_PORT=8080 \
    AZURE_SA_CONTAINER="**None**" \
    AZURE_SA_CONNECTION_STRING="**None**"

# Install Python3

RUN apk add --no-cache python3-dev libffi-dev gcc musl-dev openssl openssl-dev

COPY requirements.txt /requirements.txt
RUN pip3 install -r requirements.txt

COPY backup.sh /backup.sh
COPY azblob_async.py /azblob_async.py
COPY aws_async.py /aws_async.py

VOLUME /backups

ENTRYPOINT ["/bin/sh", "-c"]
CMD ["exec /usr/local/bin/go-cron -s \"$SCHEDULE\" -p \"$HEALTHCHECK_PORT\" -- /backup.sh"]

HEALTHCHECK --interval=5m --timeout=3s \
  CMD curl -f "http://localhost:$HEALTHCHECK_PORT/" || exit 1